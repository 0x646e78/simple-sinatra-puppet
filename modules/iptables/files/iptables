*filter

# Default policies. We don't need FORWARD. ACCEPT IN/OUT to prevent lockout
:INPUT ACCEPT [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]

# Drop Invalid packets, allow established
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT 

# Only accept Echo Requests
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT 

# SYN Check
-A INPUT -p tcp ! --syn -m state --state NEW -j DROP

# Drop NULL TCP packets
-A INPUT -p tcp --tcp-flags ALL NONE -j DROP

# Accept loopback
-A INPUT -i lo -j ACCEPT 

# SSH, log and drop upon excessive connections (bruteforce etc)
-A INPUT -p tcp -m tcp --dport 22 -m state --state NEW -m recent --set --name SSH -j ACCEPT 
-A INPUT -p tcp -m tcp --dport 22 -m recent --update --seconds 60 --hitcount 6 --rttl --name SSH -j LOG --log-prefix "BAD SSH bruteforce " 
-A INPUT -p tcp -m tcp --dport 22 -m recent --update --seconds 60 --hitcount 6 --rttl --name SSH -j DROP 

# HTTP, log and drop upon too many connections from same ip
-A INPUT -p tcp -m tcp --dport 80 -m state --state NEW -m recent --set --name HTTP -j ACCEPT
-A INPUT -p tcp -m tcp --dport 80 -m recent --update --seconds 30 --hitcount 20 --rttl --name HTTP -j LOG --log-prefix "BAD http throttle "
-A INPUT -p tcp -m tcp --dport 80 -m recent --update --seconds 30 --hitcount 20 --rttl --name HTTP -j DROP

# Limit and log incoming packets matching our limit, DROP everything else
-A INPUT -p tcp -m limit --limit 4/sec --limit-burst 8 -j LOG --log-prefix "unsolicited " --log-level 7 
-A INPUT -j DROP

-A FORWARD -j DROP
-A OUTPUT -m conntrack --ctstate INVALID -j DROP 

COMMIT
